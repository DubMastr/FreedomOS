# Copyright 2016-2017 Antoine GRAVELOT
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#  Author : Nevax
#

# -- - INIT - -- #
fontresload("0", "ttf/Roboto-Regular.ttf", "13");
fontresload("1", "ttf/Roboto-Regular.ttf", "18");
loadlang("langs/en.lang");

# -- - VARIABLES - -- #
ini_set("rom_name", "FreedomOS");
ini_set("rom_version", "!version!");
ini_set("rom_author", "Nevax");
ini_set("rom_date", "!date!");
ini_set("rom_device", "!device!");

#UI
ini_set("force_colorspace", "rgba");
theme("redblack");

anisplash(
  1,
  "splash/0", 500,
  "splash/10", 30,
  "splash/20", 30,
  "splash/30", 30,
  "splash/40", 30,
  "splash/50", 30,
  "splash/60", 30,
  "splash/70", 30,
  "splash/80", 30,
  "splash/90", 30,
  "splash/100", 1000
);

# -- - SELECT LANGUAGE - -- #
selectbox(
  "<~language.title>", "<~language.text>", "@agreement", "language.prop",
  "<~language.french>", "<~language.french.info>", 0,
  "<~language.english>", "<~language.english.info>", 1,
  "<~language.italian>", "<~language.italian.info>", 0,
  "<~language.german>", "<~language.german.info>", 0,
  "<~language.spanish>", "<~language.spanish.info>", 0,
  "<~language.turkish>", "<~language.turkish.info>", 0,
  "<~language.tchinese>", "<~language.tchinese.info>", 0,
  "<~language.schinese>", "<~language.schinese.info>", 0
);

# -- - SET LANGUAGE - -- #
if prop("language.prop", "selected.0") == "1" then
  loadlang("langs/fr.lang");
endif;

if prop("language.prop", "selected.0") == "2" then
  loadlang("langs/en.lang");
endif;

if prop("language.prop", "selected.0") == "3" then
  loadlang("langs/it.lang");
endif;

if prop("language.prop", "selected.0") == "4" then
  loadlang("langs/de.lang");
endif;

if prop("language.prop", "selected.0") == "5" then
  loadlang("langs/es.lang");
endif;

if prop("language.prop", "selected.0") == "6" then
  loadlang("langs/tr.lang");
endif;

if prop("language.prop", "selected.0") == "7" then
  fontresload( "0", "ttf/Roboto-Regular.ttf;ttf/DroidSansFallback.ttf;", "12" );
  fontresload( "1", "ttf/Roboto-Regular.ttf;ttf/DroidSansFallback.ttf;", "14" );
  loadlang("langs/tc.lang");
endif;

if prop("language.prop", "selected.0") == "8" then
  fontresload( "0", "ttf/Roboto-Regular.ttf;ttf/DroidSansFallback.ttf;", "12" );
  fontresload( "1", "ttf/Roboto-Regular.ttf;ttf/DroidSansFallback.ttf;", "14" );
  loadlang("langs/sc.lang");
endif;

# -- - WELCOME - -- #
viewbox(
    "<~welcome.title>",
    "<~welcome.text1> <b>" + ini_get("rom_name") + " " + ini_get("rom_version") + "</b> <~by> <b>" + ini_get("rom_author") + "</b>.\n\n\n\n" +
    "<~welcome.title2>\n\n" +
    "  <~welcome.version>\t\t:\t<b><#selectbg_g>" + ini_get("rom_version") + "</#></b>\n" +
    "  <~welcome.device>\t\t\t:\t<b><#selectbg_g>" + ini_get("rom_device") + "</#></b>\n" +
    "  <~welcome.developer>\t\t:\t<b><#selectbg_g>" + ini_get("rom_author") +"</#></b>\n" +
    "  <~welcome.updated>\t\t:\t<b><#selectbg_g>" + ini_get("rom_date") + "</#></b>\n\n" +
    "  <~welcome.next>",
    "@welcome");

# -- - MAIN MENU - -- #
menubox(
  ini_get("rom_name") + " <~by> <b>Nevax</b>", "<~main.tittle>", "@welcome", "menu.prop",

  "<b><~main.install></b>", "<~main.install.info>", "@install",
  "<b><~main.sys></b>", "<~main.sys.info>", "@info",
  "<b><~changelog.title></b>", "<~main.changelog.info>", "@update",
  "<b><~main.exit></b>", "<~main.exit.info>", "@default"
);

# -- - SYSTEM INFO - -- #
if prop("menu.prop", "selected") == "2" then
  pleasewait("<~sys.info.wait>");
  setvar(
  "sysinfo", "\n\n" +
  "<~sys.info.model>\t\t\t: <b><#selectbg_g>" + sysprop("ro.product.model") + "</#></b>\n" +
  "<~sys.info.name>\t\t\t: <b><#selectbg_g>" + sysprop("ro.product.name") + "</#></b>\n" +
  "<~sys.info.manu>\t: <b><#selectbg_g>" + sysprop("ro.product.manufacturer") + "</#></b>\n\n" +
  "<~sys.info.cpu>\t\t\t: <b><#selectbg_g>" + sysprop("ro.product.cpu.abi") + "</#></b>\n" +
  "<~sys.info.lcd>\t\t: <b><#selectbg_g>" + sysprop("ro.sf.lcd_density") + "</#></b>\n\n" +
  "<~sys.info.storage>\t\t: <b><#selectbg_g>" + getdisksize("/system", "m") + " MB</#></b>\n" +
  "\t\t<~sys.info.storage.free>\t: <b><#selectbg_g>" + getdiskfree("/system", "m") + " MB</#></b>\n\n"
  );

  textbox("<~sys.info.title>", "<~sys.info.title2>", "@info", getvar("sysinfo"));
  back("2");
endif;

# -- - CHANGELOG - -- #
if prop("menu.prop", "selected") == "3" then
  textdialog("FreedomOS changelog", resread("changelog.txt"), "Close");
  back("1");
endif;

# -- - EXIT - -- #
if prop("menu.prop", "selected") == "4" then
  if confirm("<~main.exit>", "<~main.exit.info>?", "@alert") == "yes" then
    exit("");
  endif;
back("1");
endif;

agreebox(
   "Terms Of Use",
   "<@center>Please read the FreedomOS terms of use</@>",
   "@default",
   "" + readfile_aroma("agreement.txt"),
   "I agree with these terms of use",
   "<@center>You must accept the terms</@>"
 );

# -- - INSTALL OPTIONS - -- #
ini_set("text_next", "<~text_next>");
selectbox(
  "<~install_mod.tittle>", "<~install_mod.tittle2>", "@default", "install_mod.prop",

  "<~gapps.tittle>", "", 2,
    "<~gapps_yes>", "<~info.gapps_yes>", 1,
    "<~gapps_no>", "<~info.gapps_no>", 0,
  "<~addon.tittle>", "", 2,
    "<~addon_yes>", "<~info.addon_yes>", 0,
    "<~addon_no>", "<~info.addon_no>", 1,
  "<~firmware.tittle>", "", 2,
    "<~fw_mm>", "<~info.fw_mm>", 0,
    "<~fw_n>", "<~info.fw_n>", 1,
  "<~passwordfix.tittle>", "", 2,
    "<~passwordfix_yes>", "<~info.passwordfix_yes>", 0,
    "<~passwordfix_no>", "<~info.passwordfix_no>", 1
);

if (file_getprop("/tmp/aroma/install_mod.prop", "selected.1") == "1")
  then
  ##############################################
  # Load Previous Choices
  ##############################################
  checkviewbox(
    "Load Previous Choices",
    "<b>Do you want to load your choices from a previous install?</b>\n\n",
    "@welcome",
    "Load choices", "1", "loadselections"
  );

  if
      getvar("loadselections")=="1"
    then
      if
          getvar("reset")!="1"
      then
          resexec("scripts/tools.sh", "load");
          setvar("reset", "1");
      endif;
    else
      if
        getvar("reset")=="1" then
          resexec("scripts/tools.sh", "reset");
          setvar("reset","0");
      endif;
  endif;

  ##############################################
  # Customized installation
  ##############################################
  form(
      "Google Apps",
      "Please select which apps you want to include or exclude</#>",
      "@default",
      aromagapps.prop,
      "inclorexcl",     "Choose to include or exclude the apps below",        "",                    "group",
        "1",     "Include",   "Choose the apps you WANT installed from the list below.",             "select.selected",
        "0",     "Exclude",   "Choose the apps you DON'T WANT installed from the list below.",       "select",

      "gapps",     "Choose GApps which you want to add on install/exclude list",        "",                                         "group",
        "AndroidPay",     "<b>Android Pay</b>",       "",                      "check",
        "CalculatorGoogle",     "<b>Google Calculator</b>",       "",                      "check",
        "CalendarGoogle",     "<b>Google Calendar</b>",       "",                      "check",
        "CalSync",     "<b>Google Calendar Sync</b>",       "(installed by default when Google Calendar is NOT being installed)",                      "check",
        "CameraGoogle",     "<b>Google Camera</b>",       "",                      "check",
        "Chrome",     "<b>Google Chrome</b>",       "",                      "check",
        "CloudPrint",     "<b>Google Cloud Print</b>",       "",                      "check",
        "DialerCombo",     "<b>Google Contacts + Google Dialer</b>",       "<#f00>EXPERIMENTAL, read the FAQ</#>",                      "check",
        "Drive",     "<b>Google Drive</b>",       "",                      "check",
        "ExchangeGoogle",     "<b>Google Exchange Services</b>",       "",                      "check",
        "FaceDetect",     "<b>Face Detection for Media</b>",       "",                      "check",
        "FaceUnlock",     "<b>Face Unlock</b>",       "",                      "check",
        "Gmail",     "<b>Gmail</b>",       "",                      "check",
        "GoogleTTS",     "<b>Google Text-to-Speech</b>",       "",                      "check",
        "Hotword",     "<b>OK Google Hotword Enrollment</b>",       "(automatically selected if Search will be installed)",                      "check",
        "KeyboardGoogle",     "<b>Google Keyboard</b>",       "",                      "check",
        "Messenger",     "<b>Messenger</b>",       "",                      "check",
        "PixelIcons",     "<b>Pixel Icons</b>",       "",                      "check",
        "PixelLauncher",     "<b>Pixel Launcher</b>",       "(Wallpapers and Google Search Required)",                      "check",
        "Photos",     "<b>Google Photos</b>",       "",                      "check",
        "PlayGames",     "<b>Google Play Games</b>",       "",                      "check",
        "PrintServiceGoogle",     "<b>Print Service Recommendation Service</b>",       "",                      "check",
        "Search",     "<b>Google Search</b>",       "To Exclude Google Search AND Google Now Launcher AND Pixel Launcher <#f00>OR</#> To Include Google Search AND OK Google Hotword Enrollment",                      "check",
        "Speech",     "<b>Offline Speech Files</b>",       "(Required for offline voice dicatation support)",                      "check",
        "TagGoogle",     "<b>Google NFC Tags</b>",       "",                      "check",
        "Talkback",     "<b>Talkback</b>",       "",                      "check",
        "Wallpapers",     "<b>Wallpapers</b>",       "To Exclude BOTH Wallpapers AND Pixel Launcher <#f00>OR</#> To Include Wallpapers",                      "check",
        "YouTube",     "<b>YouTube</b>",       "",                      "check"
  );

  # Duplicate aromagapps.prop and rename it to gapps.prop
  resexec("scripts/props.sh");

  ##############################################
  # Write the gapps-config file
  ##############################################
  setvar("gapps","");

  # INCLUDE/EXCLUDE
  if
    prop("gapps.prop", "inclorexcl")=="1"
  then
    appendvar("gapps", "Include");
  else
    appendvar("gapps", "Exclude");
  endif;

  # APP CHOICES
  appendvar("gapps", "\n\n");

  if
    prop("gapps.prop", "AndroidPay")=="1"
  then
    appendvar("gapps", "AndroidPay\n");
  endif;

  if
    prop("gapps.prop", "CalculatorGoogle")=="1"
  then
    appendvar("gapps", "CalculatorGoogle\n");
  endif;

  if
    prop("gapps.prop", "CalendarGoogle")=="1"
  then
    appendvar("gapps", "CalendarGoogle\n");
  endif;

  if
    prop("gapps.prop", "CalSync")=="1"
  then
    appendvar("gapps", "CalSync\n");
  endif;

  if
    prop("gapps.prop", "CameraGoogle")=="1"
  then
    appendvar("gapps", "CameraGoogle\n");
  endif;

  if
    prop("gapps.prop", "Chrome")=="1"
  then
    appendvar("gapps", "Chrome\n");
  endif;

  if
    prop("gapps.prop", "CloudPrint")=="1"
  then
    appendvar("gapps", "CloudPrint\n");
  endif;

  if
    prop("gapps.prop", "DialerCombo")=="1"
  then
    appendvar("gapps", "DialerFramework\n");
    appendvar("gapps", "DialerGoogle\n");
    appendvar("gapps", "ContactsGoogle\n");
  endif;

  if
    prop("gapps.prop", "Docs")=="1"
  then
    appendvar("gapps", "Docs\n");
  endif;

  if
    prop("gapps.prop", "Drive")=="1"
  then
    appendvar("gapps", "Drive\n");
  endif;

  if
    prop("gapps.prop", "ExchangeGoogle")=="1"
  then
    appendvar("gapps", "ExchangeGoogle\n");
  endif;

  if
    prop("gapps.prop", "FaceDetect")=="1"
  then
    appendvar("gapps", "FaceDetect\n");
  endif;

  if
    prop("gapps.prop", "FaceUnlock")=="1"
  then
    appendvar("gapps", "FaceUnlock\n");
  endif;

  if
    prop("gapps.prop", "Gmail")=="1"
  then
    appendvar("gapps", "Gmail\n");
  endif;

  if
    prop("gapps.prop", "GoogleNow")=="1"
  then
    appendvar("gapps", "GoogleNow\n");
  endif;


  if
    prop("gapps.prop", "GoogleTTS")=="1"
  then
    appendvar("gapps", "GoogleTTS\n");
  endif;

  if
    prop("gapps.prop", "Hotword")=="1"
  then
    appendvar("gapps", "Hotword\n");
  endif;

  if
    prop("gapps.prop", "KeyboardGoogle")=="1"
  then
    appendvar("gapps", "KeyboardGoogle\n");
  endif;

  if
    prop("gapps.prop", "Messenger")=="1"
  then
    appendvar("gapps", "Messenger\n");
  endif;

  if
    prop("gapps.prop", "PixelIcons")=="1"
  then
    appendvar("gapps", "PixelIcons\n");
  endif;

  if
    prop("gapps.prop", "PixelLauncher")=="1"
  then
    appendvar("gapps", "PixelLauncher\n");
  endif;

  if
    prop("gapps.prop", "Wallpapers")=="1"
  then
    appendvar("gapps", "Wallpapers\n");
  endif;

  if
    prop("gapps.prop", "Photos")=="1"
  then
    appendvar("gapps", "Photos\n");
  endif;

  if
    prop("gapps.prop", "PlayGames")=="1"
  then
    appendvar("gapps", "PlayGames\n");
  endif;

  if
    prop("gapps.prop", "PrintServiceGoogle")=="1"
  then
    appendvar("gapps", "PrintServiceGoogle\n");
  endif;

  if
    prop("gapps.prop", "Search")=="1"
  then
    appendvar("gapps", "Search\n");
  endif;

  if
    prop("gapps.prop", "Speech")=="1"
  then
    appendvar("gapps", "Speech\n");
  endif;

  if
    prop("gapps.prop", "TagGoogle")=="1"
  then
    appendvar("gapps", "TagGoogle\n");
  endif;

  if
    prop("gapps.prop", "Talkback")=="1"
  then
    appendvar("gapps", "Talkback\n");
  endif;

  if
    prop("gapps.prop", "YouTube")=="1"
  then
    appendvar("gapps", "YouTube\n");
  endif;

  # Force Google WebViewGoogle installation, it's required by most of the apps.
  # It will not be installed if Gogole Chrome is ticked,
  appendvar("gapps", "WebViewGoogle\n");
  appendvar("gapps", "\n");

  appendvar("gapps", "\n\n");

  # WRITE CONFIG TO TEMP AND DISPLAY IT
  writetmpfile(".gapps-config", getvar("gapps"));

  textbox(
      "gapps-config",
      "Your gapps-config file",
      "@update",
      read("tmp/aroma/.gapps-config")
  );

  ##############################################
  # Save Choices
  ##############################################
  checkviewbox(
    "Save Choices",
    "<b>Do you want to save your choices?</b>\nThey are stored in /sdcard/Open-GApps\n\n",
    "@welcome",
    "Save Choices", "1", "saveselections"
  );
  if
      getvar("saveselections")=="1"
    then
      resexec("scripts/tools.sh", "save");
  endif;
endif;

# -- - SYSTEM APPS - -- #
form(
    "System Apps",
    "Please select which apps you want to include or exclude</#>",
    "@default",
    aromasapps.prop,
    "inclorexcl",     "Choose to include or exclude the apps below",        "",                    "group",
      "1",                    "Include",                  "Choose the apps you WANT installed from the list below.",        "select.selected",
      "0",                    "Exclude",                  "Choose the apps you DON'T WANT installed from the list below.",  "select",

    "sapps",     "Choose System Apps which you want to add on install/exclude list",    "",        "group",
      "AntHalService",          "<~anthal>",              "<~info.anthal>",             "check",
      "BasicDreams",            "<~basic_dream>",         "<~info.basic_dream>",        "check",
      "BluetoothMidiService",   "<~bt_midi>",             "<~info.bt_midi>",            "check",
      "DivesIconPack",          "<~dive_icon>",           "<~info.dive_icon>",          "check",
      "OPFilemanager",          "<~document>",            "<~info.document>",           "check", 
      "DeskClock",              "<~desk_clock>",          "<~info.desk_clock>",         "check",
      "EasterEgg",              "<~easter_egg>",          "<~info.easter_egg>",         "check",
      "LiveWallpapers",         "<~anim_wallpaper>",      "<~info.anim_wallpaper>",     "check",
      "OPBackup",               "<~ota>",                 "<~info.ota>",                "check",
      "OPMusic",                "<~music>",               "<~info.music>",              "check",
      "OPForum",                "<~oneplus_forum>",       "<~info.oneplus_forum>",      "check",
      "OPWallpapers",           "<~oneplus_wallpapers>",  "<~info.oneplus_wallpapers>", "check",
      "OnePlusCamera",          "<~oneplus_camera>",      "<~info.oneplus_camera>",     "check",
      "OnePlusGallery",         "<~oneplus_gallery>",     "<~info.oneplus_gallery>",    "check",
      "OPMms",                  "<~sms>",                 "<~info.sms>",                "check",
      "RifonIconPack",          "<~rifon_icon>",          "<~info.rifon_icon>",         "check",
      "SoundRecorder",          "<~sound_recorder>",      "<~info.sound_recorder>",     "check",
      "SwiftKey",               "<~swiftkey>",            "<~info.swiftkey>",           "check",
      "Tag",                    "<~tags>",                "<~info.tags>",               "check",
      "Weather",                "<~weather>",             "<~info.weather>",            "check"
);

resexec("scripts/gen_list.sh");

# -- - MOD - -- #
checkbox(
  "<~mod.tittle>", "<~mod.tittle2>", "@personalize", "mod.prop",

  "<~mod.tittle3>", "", 2,
    "<~supersu>", "<~info.supersu>", 1,
    "<~xposed>", "<~info.xposed>", 0,
    "<~adaway>", "<~info.adaway>", 1,
    "<~adb>", "<~info.adb>", 0,
    "<~dns>", "<~info.dns>", 0,
    "<~fos_wallpapers>", "<~info.fos_wallpapers>", 1,
    "<~emoji_one>", "<~info.emoji_one>", 1,
    "<~google_assistant>", "<~info.google_assistant>", 1,
    "<~arise>", "<~info.arise>", 1,
    "<~substratum>", "<~info.substratum>", 0,
    "<~permissive>", "<~info.permissive>", 0
);

if
  prop("mod.prop", "item.1.8") == "1"
then
  appendvar("gapps", "GoogleAssistant\n");
endif;

# -- ARISE -- #
if
  prop("mod.prop", "item.1.9")=="1"
then
    form(
        "ARISE Settings",
        "Please select which options you want to include with ARISE</#>",
        "@default",
        arise.prop,

        "arise",     "Please select which options you want to include with ARISE",    "",        "group",
          "install.v4a_2.5.0.5",      "<~v4a_new>",         "<~info.v4a_new>",         "check",
          "install.v4a_2.3.4.0",      "<~v4a_old>",         "<~info.v4a_old>",         "check",
          "install.v4a_profiles",     "<~v4a_profiles>",    "",                        "check",
          "install.arkamys",          "<~arkamys>",         "<~info.arkamys>",         "check",
          "install.ICEsound",         "<~icesound>",        "<~info.icesound>",        "check",
          "install.sony",             "<~sony_player>",     "<~info.sony_player>",     "check",
          "delete.deep_buffer",       "<~rm_deep_buffer>",  "<~info.rm_deep_buffer>",  "check"
    );

    if file_getprop("/tmp/aroma/arise.prop","install.ICEsound") == "1"
        then

        textbox(
          "ICEconfigs",
          "Read Me",
          "info",
          readfile_aroma("ICEconfig.txt")
        );

        form(
          "ICEsound Configuration Selection",
          "Please Select:",
          "icons/personalize",
          "ICEconfig.prop",

          "use.ICEconfig",     "ICE Configuration selection",        "",                    "group",
            "0",                    "Delete current ICEconfig and don't use any at all",                  "",        "select",
            "1",                    "ICEconfig 1",                  "",  "select.selected",
            "2",                    "ICEconfig 2",                  "",  "select",
            "3",                    "ICEconfig 3",                  "",  "select",
            "4",                    "ICEconfig 4",                  "",  "select",
            "5",                    "ICEconfig 5",                  "",  "select",
            "6",                    "ICEconfig 6",                  "",  "select"
        );

        form(
          "ICEsound Configuration Selection",
          "Please Select:",
          "personalize",
          "ICEpreset.prop",

          "use.ICEsound.preset",     "ICE Configuration selection",        "",                    "group",
            "DEEPBASS",                    "DEEPBASS",                  "",        "select",
            "DEFAULT",                    "DEFAULT",                  "",  "select.selected",
            "HOLYSHIT",                    "HOLYSHIT",                  "",        "select",
            "KRAZY",                    "KRAZY",                  "",  "select",
            "MOVIE",                    "MOVIE",                  "",  "select",
            "MUSIC2",                    "MUSIC2",                  "",  "select",
            "OUTDOORS",                    "OUTDOORS",                  "",  "select",
            "PURE",                    "PURE",                  "",  "select",
            "PURESHIT",                    "PURESHIT",                  "",  "select",
            "WIDECLARITY",                    "WIDECLARITY",                  "",  "select",
            "None",                    "None",                  "",  "select"
        );
    endif;

    resexec("scripts/gen_arise_conf.sh");
endif;

# -- - Pre-Install - -- -#
ini_set("text_next", "<~install.now>");
viewbox( "<~pre.install.title>", "<~pre.install>\n\n" + "<~pre.install2>\n\n" + "<~pre.install3>\n\n\n\n", "@install");

# -- - Install - -- #
ini_set("text_next", "<~text_next>");
install( "<~install>", "<b>" + ini_get("rom_name") + "</b> is being installed.\n\n" + "<~install.finish>", "@install");

# -- - Post-Install - -- #
ini_set("text_next", "Finish");
checkviewbox(
  "<~install.finish.title>", "<#selectbg_g><b><~finish.title></b></#>\n\n" + "<b><~finish.msg></b>\n\n" + "", "@finish",

  "<~finish.reboot>", "0", "reboot_it");

# -- - REBOOT - -- #
if
  getvar("reboot_it") == "1" then reboot("onfinish");
endif;

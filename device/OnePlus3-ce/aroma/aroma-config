# Copyright 2016 Antoine GRAVELOT
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#  Author : Nevax
#

# -- - INIT - -- #
fontresload("0", "ttf/Roboto-Regular.ttf", "13");
fontresload("1", "ttf/Roboto-Regular.ttf", "18");
loadlang("langs/en.lang");

# -- - VARAIBLES - -- #
ini_set("rom_name", "FreedomOS");
ini_set("rom_version", "!version!");
ini_set("rom_author", "Nevax");
ini_set("rom_date", "!date!");
ini_set("rom_device", "!device!");

#UI
ini_set("force_colorspace", "rgba");
theme("g3");

anisplash(
  1,
  "splash/0", 500,
  "splash/10", 30,
  "splash/20", 30,
  "splash/30", 30,
  "splash/40", 30,
  "splash/50", 30,
  "splash/60", 30,
  "splash/70", 30,
  "splash/80", 30,
  "splash/90", 30,
  "splash/100", 1000
);

# -- - SELECT LANGUAGE - -- #
selectbox(
  "<~language.title>", "<~language.text>", "@agreement", "language.prop",
  "<~language.french>", "<~language.french.info>", 0,
  "<~language.english>", "<~language.english.info>", 1,
  "<~language.italian>", "<~language.italian.info>", 0,
  "<~language.german>", "<~language.german.info>", 0,
  "<~language.spanish>", "<~language.spanish.info>", 0
);

# -- - SET LANGUAGE - -- #
if prop("language.prop", "selected.0") == "1" then
  loadlang("langs/fr.lang");
endif;

if prop("language.prop", "selected.0") == "2" then
  loadlang("langs/en.lang");
endif;

if prop("language.prop", "selected.0") == "3" then
  loadlang("langs/it.lang");
endif;

if prop("language.prop", "selected.0") == "4" then
  loadlang("langs/de.lang");
endif;

if prop("language.prop", "selected.0") == "5" then
  loadlang("langs/es.lang");
endif;

# -- - WELCOME - -- #
viewbox(
    "<~welcome.title>",
    "<~welcome.text1> <b>" + ini_get("rom_name") + " " + ini_get("rom_version") + "</b> <~by> <b>" + ini_get("rom_author") + "</b>.\n\n\n\n" +
    "<~welcome.title2>\n\n" +
    "  <~welcome.version>\t\t:\t<b><#selectbg_g>" + ini_get("rom_version") + "</#></b>\n" +
    "  <~welcome.device>\t\t\t:\t<b><#selectbg_g>" + ini_get("rom_device") + "</#></b>\n" +
    "  <~welcome.developer>\t\t:\t<b><#selectbg_g>" + ini_get("rom_author") +"</#></b>\n" +
    "  <~welcome.updated>\t\t:\t<b><#selectbg_g>" + ini_get("rom_date") + "</#></b>\n\n" +
    "  <~welcome.next>",
    "@welcome");

# -- - MAIN MENU - -- #
menubox(
  ini_get("rom_name") + " <~by> <b>Nevax</b>", "<~main.tittle>", "@welcome", "menu.prop",

  "<b><~main.install></b>", "<~main.install.info>", "@install",
  "<b><~main.sys></b>", "<~main.sys.info>", "@info",
  "<b><~changelog.title></b>", "<~main.changelog.info>", "@update",
  "<b><~main.exit></b>", "<~main.exit.info>", "@default"
);

# -- - SYSTEM INFO - -- #
if prop("menu.prop", "selected") == "2" then
  pleasewait("<~sys.info.wait>");
  setvar(
  "sysinfo", "\n\n" +
  "<~sys.info.model>\t\t\t: <b><#selectbg_g>" + sysprop("ro.product.model") + "</#></b>\n" +
  "<~sys.info.name>\t\t\t: <b><#selectbg_g>" + sysprop("ro.product.name") + "</#></b>\n" +
  "<~sys.info.manu>\t: <b><#selectbg_g>" + sysprop("ro.product.manufacturer") + "</#></b>\n\n" +
  "<~sys.info.cpu>\t\t\t: <b><#selectbg_g>" + sysprop("ro.product.cpu.abi") + "</#></b>\n" +
  "<~sys.info.lcd>\t\t: <b><#selectbg_g>" + sysprop("ro.sf.lcd_density") + "</#></b>\n\n" +
  "<~sys.info.storage>\t\t: <b><#selectbg_g>" + getdisksize("/system", "m") + " MB</#></b>\n" +
  "\t\t<~sys.info.storage.free>\t: <b><#selectbg_g>" + getdiskfree("/system", "m") + " MB</#></b>\n\n"
  );

  textbox("<~sys.info.title>", "<~sys.info.title2>", "@info", getvar("sysinfo"));
  back("2");
endif;

# -- - CHANGELOG - -- #
if prop("menu.prop", "selected") == "3" then
  textdialog("FreedomOS changelog", resread("changelog.txt"), "Close");
  back("1");
endif;

# -- - EXIT - -- #
if prop("menu.prop", "selected") == "4" then
  if confirm("<~main.exit>", "<~main.exit.info>?", "@alert") == "yes" then
    exit("");
  endif;
back("1");
endif;

agreebox(
   "Terms Of Use",
   "<@center>Please read the FreedomOS terms of use</@>",
   "@default",
   "" + readfile_aroma("agreement.txt"),
   "I agree with these terms of use",
   "<@center>You must accept the terms</@>"
 );

# -- - INSTALL OPTIONS - -- #
ini_set("text_next", "<~text_next>");
selectbox(
  "<~install_mod.tittle>", "<~install_mod.tittle2>", "@default", "install_mod.prop",

  "<~assert.tittle>", "", 2,
    "<~assert_yes>", "<~info.assert_yes>", 1,
    "<~assert_no>", "<~info.assert_no>", 0,
  "<~addon.tittle>", "", 2,
    "<~addon_yes>", "<~info.addon_yes>", 1,
    "<~addon_no>", "<~info.addon_no>", 0,
  "<~firmware.tittle>", "", 2,
    "<~fw_mm>", "<~info.fw_mm>", 0,
    "<~fw_n>", "<~info.fw_n>", 1,
  "<~passwordfix.tittle>", "", 2,
    "<~passwordfix_yes>", "<~info.passwordfix_yes>", 1,
    "<~passwordfix_no>", "<~info.passwordfix_no>", 0
);

# -- - GOOGLE APPS - -- #
ini_set("text_next", "<~text_next>");
checkbox(
  "<~gapps.tittle>", "<~gapps.tittle2>", "@personalize", "gapps.prop",

  "Google apps", "", 2,
     "<~calculator>", "<~info.calculator>", 1,
     "<~calendar>", "<~info.calendar>", 1,
     "<~call_log>", "<~info.call_log>", 1,
     "<~chrome>", "<~info.chrome>", 1,
     "<~drive>", "<~info.drive>", 1,
     "<~duo>", "<~info.duo>", 0,
     "<~gmail>", "<~info.gmail>", 1,
     "<~gmail_exchange>", "<~info.gmail_exchange>", 0,
     "<~google>", "<~info.google>", 1,
     "<~messenger>", "<~info.messenger>", 1,
     "<~photos>", "<~info.photos>", 1,
     "<~play_music>", "<~info.play_music>", 0,
     "<~youtube>", "<~info.youtube>", 1
);

##############################################
# MENU
##############################################
menubox(
    "Open GApps",
    "Please select one of the choices below",
    "@apps",
    "menu.prop",
    "Customized installation",   "Select which apps you want",     "@personalize",      #-- selected = 1
    "Complete installation",     "Install the Super package",      "@default"         #-- selected = 2
);

##############################################
# Load Previous Choices
##############################################
checkviewbox(
  "Load Previous Choices",
  "<b>Do you want to load your choices from a previous install?</b>\n\n",
  "@welcome",
  "Load choices", "1", "loadselections"
);

if
    getvar("loadselections")=="1"
  then
    if
        getvar("reset")!="1"
    then
        resexec("scripts/tools.sh", "load");
        setvar("reset", "1");
    endif;
  else
    if
      getvar("reset")=="1" then
        resexec("scripts/tools.sh", "reset");
        setvar("reset","0");
    endif;
endif;

if prop("menu.prop", "selected")=="1" then
##############################################
# Customized installation
##############################################
form(
    "Apps",
    "Please select which apps you want to include or exclude</#>",
    "@default",
    aromagapps.prop,
    "inclorexcl",     "Choose to include or exclude the apps below",        "",                    "group",
      "1",     "Include",   "Choose the apps you WANT installed from the list below.",             "select.selected",
      "0",     "Exclude",   "Choose the apps you DON'T WANT installed from the list below.",       "select",

    "gapps",     "Choose GApps which you want to add on install/exclude list",        "",                                         "group",
      "AndroidPay",     "<b>Android Pay</b>",       "",                      "check",
      "Books",     "<b>Google Play Books</b>",       "",                      "check",
      "CalculatorGoogle",     "<b>Google Calculator</b>",       "",                      "check",
      "CalendarGoogle",     "<b>Google Calendar</b>",       "",                      "check",
      "CalSync",     "<b>Google Calendar Sync</b>",       "(installed by default when Google Calendar is NOT being installed)",                      "check",
      "CameraGoogle",     "<b>Google Camera</b>",       "",                      "check",
      "Chrome",     "<b>Google Chrome</b>",       "",                      "check",
      "ClockGoogle",     "<b>Google Clock</b>",       "",                      "check",
      "CloudPrint",     "<b>Google Cloud Print</b>",       "",                      "check",
      "ContactsGoogle",     "<b>Google Contacts</b>",       "",                      "check",
      "DialerFramework",     "<b>Dialer Framework</b>",       "Necessary for Google Dialer compatibility",                      "check",
      "DialerGoogle",     "<b>Google Dialer</b>",       "",                      "check",
      "DMAgent",     "<b>Google Apps Device Policy</b>",       "",                      "check",
      "Docs",     "<b>Google Docs</b>",       "",                      "check",
      "Drive",     "<b>Google Drive</b>",       "",                      "check",
      "Earth",     "<b>Google Earth</b>",       "",                      "check",
      "ExchangeGoogle",     "<b>Google Exchange Services</b>",       "",                      "check",
      "FaceDetect",     "<b>Face Detection for Media</b>",       "",                      "check",
      "FaceUnlock",     "<b>Face Unlock</b>",       "",                      "check",
      "Fitness",     "<b>Google Fit</b>",       "",                      "check",
      "GCS",     "<b>Google Connectivity Services</b>",       "To Exclude BOTH Google Connectivity Services AND Project Fi by Google <#f00>OR</#> To Include Google Connectivity Services",                      "check",
      "Gmail",     "<b>Gmail</b>",       "",                      "check",
      "GoogleNow",     "<b>Google Now Launcher</b>",       "(Google Search Required)",                      "check",
      "GooglePlus",     "<b>Google+</b>",       "",                      "check",
      "GoogleTTS",     "<b>Google Text-to-Speech</b>",       "",                      "check",
      "Hangouts",     "<b>Google Hangouts</b>",       "",                      "check",
      "Hotword",     "<b>OK Google Hotword Enrollment</b>",       "(automatically selected if Search will be installed)",                      "check",
      "Indic",     "<b>Google Indic Keyboard</b>",       "",                      "check",
      "Japanese",     "<b>Google Japanese Input</b>",       "",                      "check",
      "Keep",     "<b>Google Keep</b>",       "",                      "check",
      "KeyboardGoogle",     "<b>Google Keyboard</b>",       "",                      "check",
      "Korean",     "<b>Google Korean Input</b>",       "",                      "check",
      "Maps",     "<b>Google Maps</b>",       "",                      "check",
      "Messenger",     "<b>Messenger</b>",       "(not installed on tablet devices)",                      "check",
      "Movies",     "<b>Google Play Movies & TV</b>",       "",                      "check",
      "Music",     "<b>Google Play Music</b>",       "",                      "check",
      "NewsStand",     "<b>Google Play Newsstand</b>",       "",                      "check",
      "NewsWidget",     "<b>Google News & Weather</b>",       "",                      "check",
      "PackageInstallerGoogle",     "<b>Google PackageInstaller</b>",       "",                      "check",
      "Pinyin",     "<b>Google Pinyin Input</b>",       "",                      "check",
      "PixelIcons",     "<b>Pixel Icons</b>",       "",                      "check",
      "PixelLauncher",     "<b>Pixel Launcher</b>",       "(Wallpapers and Google Search Required)",                      "check",
      "Photos",     "<b>Google Photos</b>",       "",                      "check",
      "PlayGames",     "<b>Google Play Games</b>",       "",                      "check",
      "PrintServiceGoogle",     "<b>Print Service Recommendation Service</b>",       "",                      "check",
      "ProjectFi",     "<b>Project Fi by Google</b>",       "",                      "check",
      "Sheets",     "<b>Google Sheets</b>",       "",                      "check",
      "Slides",     "<b>Google Slides</b>",       "",                      "check",
      "Search",     "<b>Google Search</b>",       "To Exclude Google Search AND Google Now Launcher AND Pixel Launcher <#f00>OR</#> To Include Google Search AND OK Google Hotword Enrollment",                      "check",
      "Speech",     "<b>Offline Speech Files</b>",       "(Required for offline voice dicatation support)",                      "check",
      "StorageManagerGoogle",     "<b>Google Storage Manager</b>",       "",                      "check",
      "Street",     "<b>Google Street View</b>",       "",                      "check",
      "TagGoogle",     "<b>Google NFC Tags</b>",       "",                      "check",
      "Talkback",     "<b>Talkback</b>",       "",                      "check",
      "Translate",     "<b>Google Translate</b>",       "",                      "check",
      "VRService",     "<b>Google VR Service</b>",       "",                      "check",
      "Wallpapers",     "<b>Wallpapers</b>",       "To Exclude BOTH Wallpapers AND Pixel Launcher <#f00>OR</#> To Include Wallpapers",                      "check",
      "WebViewGoogle",     "<b>Android System WebView</b>",       "",                      "check",
      "YouTube",     "<b>YouTube</b>",       "",                      "check",
      "Zhuyin",     "<b>Google Zhuyin Input</b>",       "",                      "check"
);
# Duplicate aromagapps.prop and rename it to gapps.prop - this is useful because the selections won't be erased by the complete installation (menu.prop selected ==2)
resexec("scripts/props.sh");
endif;

#IF COMPLETE INSTALLATION IS CHOOSEN - reset gapps.prop
if prop("menu.prop", "selected")=="2" then
  writetmpfile("gapps.prop", " ");
endif;

form(
    "Default removal bypass",
    "Careful, you can override the default removal of Stock/AOSP applications below",
    "@default",
    bypass.prop,
    "bypassrem",     "Bypass the automatic removal of Stock/AOSP apps.\nPlease only select if you are sure you want them installed alongside the Google replacement.",        "",     "group",
      "+Browser",     "<b>+Browser</b>",      "",    "check",
      "+CameraStock", "<b>+CameraStock</b>",  "",    "check",
      "+Email",     "<b>+Email</b>",      "",        "check",
      "+Gallery",     "<b>+Gallery</b>",      "",    "check",
      "+Launcher",     "<b>+Launcher</b>",      "",  "check",
      "+MMS",     "<b>+MMS</b>",      "",            "check",
      "+PicoTTS",     "<b>+PicoTTS</b>",      "",    "check"
);

form(
    "Remove",
    "Please select which Stock/AOSP apps you want to remove\n</#>",
    "@default",
    rem.prop,
    "remove",     "Choose apps which you want to remove",        "",                                         "group",
      "BasicDreams",     "<b>Basic Dreams Live Wallpaper</b>",       "",                      "check",
      "Browser",     "<b>Stock/AOSP Browser</b>",       "(automatically removed when Google Chrome is installed)",                      "check",
      "CalendarStock",     "<b>Stock/AOSP Calendar</b>",       "(automatically removed when Google Calendar is installed)",                      "check",
      "CameraStock",     "<b>Stock/AOSP/Moto Camera</b>",       "(automatically removed when Google Camera is installed)",                      "check",
      "ClockStock",     "<b>Stock/AOSP Clock</b>",       "(automatically removed when Google Clock is installed)",                      "check",
      "CMAccount",     "<b>CyanogenMod Account</b>",       "",                      "check",
      "CMAudioFX",     "<b>CyanogenMod AudioFX</b>",       "",                      "check",
      "CMFileManager",     "<b>CyanogenMod File Manager</b>",       "",                      "check",
      "CMMusic",     "<b>CyanogenMod Music</b>",       "",                      "check",
      "CMSetupWizard",     "<b>CyanogenMod Setup Wizard</b>",       "",                      "check",
      "CMUpdater",     "<b>CyanogenMod Updater</b>",       "",                      "check",
      "CMWallpapers",     "<b>CyanogenMod Wallpapers</b>",       "",                      "check",
      "DashClock",     "<b>DashClock Widget</b>",       "(a widget found in certain ROMs)",                      "check",
      "Email",     "<b>Stock/AOSP Email</b>",       "",                      "check",
      "ExchangeStock",     "<b>Stock/AOSP Exchange Services</b>",       "(automatically removed when Google Exchange Services is installed)",                      "check",
      "FMRadio",     "<b>Stock/AOSP FM Radio</b>",       "(not found on all devices or ROM's)",                      "check",
      "Galaxy",     "<b>Galaxy Live Wallpaper</b>",       "",                      "check",
      "Gallery",     "<b>Stock/AOSP Gallery</b>",       "(automatically removed when Google Photos is installed)",                      "check",
      "HoloSpiral",     "<b>Holo Spiral Live Wallpaper</b>",       "",                      "check",
      "KeyboardStock",     "<b>Stock/AOSP Keyboard</b>",       "(automatically removed when Google Keyboard is installed)",                      "check",
      "Launcher",     "<b>Stock/AOSP Launcher(s)</b>",       "(automatically removed when Google Launcher is installed)",                      "check",
      "LiveWallpapers",     "<b>Live Wallpapers</b>",       "",                      "check",
      "LockClock",     "<b>Lock Clock</b>",       "(a widget found in certain ROMs)",                      "check",
      "MMS",     "<b>Stock/AOSP MMS</b>",       "(automatically removed when Google Hangouts or Messenger are installed)",                      "check",
      "NoiseField",     "<b>NoiseField Live Wallpaper</b>",       "",                      "check",
      "Phasebeam",     "<b>Phasebeam Live Wallpaper</b>",       "",                      "check",
      "PhotoPhase",     "<b>PhotoPhase Live Wallpaper</b>",       "",                      "check",
      "PhotoTable",     "<b>PhotoTable Live Wallpaper</b>",       "",                      "check",
      "PicoTTS",     "<b>Stock/AOSP Text-to-Speech</b>",       "(automatically removed when Google TTS is installed)",                      "check",
      "SimToolKit",     "<b>Stock/AOSP Sim ToolKit</b>",       "",                      "check",
      "StorageManagerStock",     "<b>Stock/AOSP StorageManager</b>",       "",                      "check",
      "Studio",     "<b>Stock/AOSP Movie Studio</b>",       "",                      "check",
      "SykoPath",     "<b>SykoPath Layers Manager</b>",       "(found in certain ROM's)",                      "check",
      "Terminal",     "<b>Terminal</b>",       "",                      "check",
      "Themes",     "<b>CyanogenMod Theme Engine</b>",       "(Will break the link in Settings to Themes!)",                      "check",
      "VisualizationWallpapers",     "<b>Visualization Live Wallpaper</b>",       "",                      "check",
      "WhisperPush",     "<b>WhisperPush</b>",       "",                      "check"
);
form(
    "Advanced Options",
    "Some advanced options that most likely don't need to be used.\n</#>",
    "@default",
    extra.prop,
    "extra",     "Advanced Options",        "",                                         "group",
      "exdebug",     "<b>NoDebug</b>",       "To disable the creation of the debug log",                      "check",
      "extest",     "<b>Test</b>",       "To perform a simulation generating a detailed log, but <u>WILL NOT MAKE ANY CHANGES</u> to your device.",                      "check",
      "exswype",     "<b>SkipSwypelibs</b>",       "To skip/remove the installation of the Google Swype libraries for the AOSP Keyboard",                      "check",
      "exsubstitute","<b>SubstituteSwypelibs</b>", "To overwrite the AOSP Keyboard libraries with the Google Swype libraries instead of adding",                      "check",
      "exnopreodex",   "<b>NoPreODEX</b>",           "To disable the smart Pre-ODEX-ing on Marshmallow+ ROMs",                      "check",
      "exclean",     "<b>ForceClean</b>",       "To ignore the detection of dirty installations and force the installer to behave as if it concerns a clean install <u>DO NOT REPORT ANY BUGS IF USED</u>",                      "check",
      "WebViewStub",     "<b>WebViewStub</b>",       "Placeholder for Google WebView, on 7.0+ automatically used instead of WebViewGoogle if Chrome is installed",                      "check"
);

##############################################
# Write the gapps-config file
##############################################
setvar("gapps","");

# ADVANCED OPTIONS
if
  prop("extra.prop", "exdebug")=="1"
then
  appendvar("gapps", "NoDebug\n");
endif;
if
  prop("extra.prop", "extest")=="1"
then
  appendvar("gapps", "Test\n");
endif;
if
  prop("extra.prop", "exswype")=="1"
then
  appendvar("gapps", "skipswypelibs\n");
endif;
if
  prop("extra.prop", "exsubstitute")=="1"
then
  appendvar("gapps", "substituteswypelibs\n");
endif;
if
  prop("extra.prop", "exnopreodex")=="1"
then
  appendvar("gapps", "nopreodex\n");
endif;
if
  prop("extra.prop", "exclean")=="1"
then
  appendvar("gapps", "forceclean\n");
endif;
if
  prop("extra.prop", "WebViewStub")=="1"
then
  appendvar("gapps", "WebViewStub\n");
endif;

# INCLUDE/EXCLUDE
if
  prop("gapps.prop", "inclorexcl")=="1"
then
  appendvar("gapps", "Include");
else
  appendvar("gapps", "Exclude");
endif;

# APP CHOICES
appendvar("gapps", "\n\n");

if
  prop("gapps.prop", "AndroidPay")=="1"
then
  appendvar("gapps", "AndroidPay\n");
endif;

if
  prop("gapps.prop", "Books")=="1"
then
  appendvar("gapps", "Books\n");
endif;

if
  prop("gapps.prop", "CalculatorGoogle")=="1"
then
  appendvar("gapps", "CalculatorGoogle\n");
endif;

if
  prop("gapps.prop", "CalendarGoogle")=="1"
then
  appendvar("gapps", "CalendarGoogle\n");
endif;

if
  prop("gapps.prop", "CalSync")=="1"
then
  appendvar("gapps", "CalSync\n");
endif;

if
  prop("gapps.prop", "CameraGoogle")=="1"
then
  appendvar("gapps", "CameraGoogle\n");
endif;

if
  prop("gapps.prop", "Chrome")=="1"
then
  appendvar("gapps", "Chrome\n");
endif;

if
  prop("gapps.prop", "ClockGoogle")=="1"
then
  appendvar("gapps", "ClockGoogle\n");
endif;

if
  prop("gapps.prop", "CloudPrint")=="1"
then
  appendvar("gapps", "CloudPrint\n");
endif;

if
  prop("gapps.prop", "ContactsGoogle")=="1"
then
  appendvar("gapps", "ContactsGoogle\n");
endif;

if
  prop("gapps.prop", "DialerFramework")=="1"
then
  appendvar("gapps", "DialerFramework\n");
endif;

if
  prop("gapps.prop", "DialerGoogle")=="1"
then
  appendvar("gapps", "DialerGoogle\n");
endif;

if
  prop("gapps.prop", "DMAgent")=="1"
then
  appendvar("gapps", "DMAgent\n");
endif;

if
  prop("gapps.prop", "Docs")=="1"
then
  appendvar("gapps", "Docs\n");
endif;

if
  prop("gapps.prop", "Drive")=="1"
then
  appendvar("gapps", "Drive\n");
endif;

if
  prop("gapps.prop", "Earth")=="1"
then
  appendvar("gapps", "Earth\n");
endif;

if
  prop("gapps.prop", "ExchangeGoogle")=="1"
then
  appendvar("gapps", "ExchangeGoogle\n");
endif;

if
  prop("gapps.prop", "FaceDetect")=="1"
then
  appendvar("gapps", "FaceDetect\n");
endif;

if
  prop("gapps.prop", "FaceUnlock")=="1"
then
  appendvar("gapps", "FaceUnlock\n");
endif;

if
  prop("gapps.prop", "Fitness")=="1"
then
  appendvar("gapps", "Fitness\n");
endif;

if
  prop("gapps.prop", "GCS")=="1"
then
  appendvar("gapps", "GCS\n");
endif;

if
  prop("gapps.prop", "Gmail")=="1"
then
  appendvar("gapps", "Gmail\n");
endif;

if
  prop("gapps.prop", "GoogleNow")=="1"
then
  appendvar("gapps", "GoogleNow\n");
endif;

if
  prop("gapps.prop", "GooglePlus")=="1"
then
  appendvar("gapps", "GooglePlus\n");
endif;

if
  prop("gapps.prop", "GoogleTTS")=="1"
then
  appendvar("gapps", "GoogleTTS\n");
endif;

if
  prop("gapps.prop", "Hangouts")=="1"
then
  appendvar("gapps", "Hangouts\n");
endif;

if
  prop("gapps.prop", "Hotword")=="1"
then
  appendvar("gapps", "Hotword\n");
endif;

if
  prop("gapps.prop", "Indic")=="1"
then
  appendvar("gapps", "Indic\n");
endif;

if
  prop("gapps.prop", "Japanese")=="1"
then
  appendvar("gapps", "Japanese\n");
endif;

if
  prop("gapps.prop", "Keep")=="1"
then
  appendvar("gapps", "Keep\n");
endif;

if
  prop("gapps.prop", "KeyboardGoogle")=="1"
then
  appendvar("gapps", "KeyboardGoogle\n");
endif;

if
  prop("gapps.prop", "Korean")=="1"
then
  appendvar("gapps", "Korean\n");
endif;

if
  prop("gapps.prop", "Maps")=="1"
then
  appendvar("gapps", "Maps\n");
endif;

if
  prop("gapps.prop", "Messenger")=="1"
then
  appendvar("gapps", "Messenger\n");
endif;

if
  prop("gapps.prop", "Movies")=="1"
then
  appendvar("gapps", "Movies\n");
endif;

if
  prop("gapps.prop", "Music")=="1"
then
  appendvar("gapps", "Music\n");
endif;

if
  prop("gapps.prop", "NewsStand")=="1"
then
  appendvar("gapps", "NewsStand\n");
endif;

if
  prop("gapps.prop", "NewsWidget")=="1"
then
  appendvar("gapps", "NewsWidget\n");
endif;

if
  prop("gapps.prop", "PackageInstallerGoogle")=="1"
then
  appendvar("gapps", "PackageInstallerGoogle\n");
endif;

if
  prop("gapps.prop", "Pinyin")=="1"
then
  appendvar("gapps", "Pinyin\n");
endif;

if
  prop("gapps.prop", "PixelIcons")=="1"
then
  appendvar("gapps", "PixelIcons\n");
endif;

if
  prop("gapps.prop", "PixelLauncher")=="1"
then
  appendvar("gapps", "PixelLauncher\n");
endif;

if
  prop("gapps.prop", "Wallpapers")=="1"
then
  appendvar("gapps", "Wallpapers\n");
endif;

if
  prop("gapps.prop", "Photos")=="1"
then
  appendvar("gapps", "Photos\n");
endif;

if
  prop("gapps.prop", "PlayGames")=="1"
then
  appendvar("gapps", "PlayGames\n");
endif;

if
  prop("gapps.prop", "PrintServiceGoogle")=="1"
then
  appendvar("gapps", "PrintServiceGoogle\n");
endif;

if
  prop("gapps.prop", "ProjectFi")=="1"
then
  appendvar("gapps", "ProjectFi\n");
endif;

if
  prop("gapps.prop", "Sheets")=="1"
then
  appendvar("gapps", "Sheets\n");
endif;

if
  prop("gapps.prop", "Slides")=="1"
then
  appendvar("gapps", "Slides\n");
endif;

if
  prop("gapps.prop", "Search")=="1"
then
  appendvar("gapps", "Search\n");
endif;

if
  prop("gapps.prop", "Speech")=="1"
then
  appendvar("gapps", "Speech\n");
endif;

if
  prop("gapps.prop", "StorageManagerGoogle")=="1"
then
  appendvar("gapps", "StorageManagerGoogle\n");
endif;

if
  prop("gapps.prop", "Street")=="1"
then
  appendvar("gapps", "Street\n");
endif;

if
  prop("gapps.prop", "TagGoogle")=="1"
then
  appendvar("gapps", "TagGoogle\n");
endif;

if
  prop("gapps.prop", "Talkback")=="1"
then
  appendvar("gapps", "Talkback\n");
endif;

if
  prop("gapps.prop", "Translate")=="1"
then
  appendvar("gapps", "Translate\n");
endif;

if
  prop("gapps.prop", "VRService")=="1"
then
  appendvar("gapps", "VRService\n");
endif;

if
  prop("gapps.prop", "WebViewGoogle")=="1"
then
  appendvar("gapps", "WebViewGoogle\n");
endif;

if
  prop("gapps.prop", "YouTube")=="1"
then
  appendvar("gapps", "YouTube\n");
endif;

if
  prop("gapps.prop", "Zhuyin")=="1"
then
  appendvar("gapps", "Zhuyin\n");
endif;

appendvar("gapps", "\n");

# REMOVALS
if
  prop("rem.prop", "BasicDreams")=="1"
then
  appendvar("gapps", "BasicDreams\n");
endif;

if
  prop("rem.prop", "Browser")=="1"
then
  appendvar("gapps", "Browser\n");
endif;

if
  prop("rem.prop", "CalendarStock")=="1"
then
  appendvar("gapps", "CalendarStock\n");
endif;

if
  prop("rem.prop", "ClockStock")=="1"
then
  appendvar("gapps", "ClockStock\n");
endif;

if
  prop("rem.prop", "CameraStock")=="1"
then
  appendvar("gapps", "CameraStock\n");
endif;

if
  prop("rem.prop", "CMAccount")=="1"
then
  appendvar("gapps", "CMAccount\n");
endif;

if
  prop("rem.prop", "CMAudioFX")=="1"
then
  appendvar("gapps", "CMAudioFX\n");
endif;

if
  prop("rem.prop", "CMMusic")=="1"
then
  appendvar("gapps", "CMMusic\n");
endif;

if
  prop("rem.prop", "CMFileManager")=="1"
then
  appendvar("gapps", "CMFileManager\n");
endif;

if
  prop("rem.prop", "CMSetupWizard")=="1"
then
  appendvar("gapps", "CMSetupWizard\n");
endif;

if
  prop("rem.prop", "CMUpdater")=="1"
then
  appendvar("gapps", "CMUpdater\n");
endif;

if
  prop("rem.prop", "CMWallpapers")=="1"
then
  appendvar("gapps", "CMWallpapers\n");
endif;

if
  prop("rem.prop", "DashClock")=="1"
then
  appendvar("gapps", "DashClock\n");
endif;

if
  prop("rem.prop", "Email")=="1"
then
  appendvar("gapps", "Email\n");
endif;

if
  prop("rem.prop", "ExchangeStock")=="1"
then
  appendvar("gapps", "ExchangeStock\n");
endif;

if
  prop("rem.prop", "FMRadio")=="1"
then
  appendvar("gapps", "FMRadio\n");
endif;

if
  prop("rem.prop", "Galaxy")=="1"
then
  appendvar("gapps", "Galaxy\n");
endif;

if
  prop("rem.prop", "Gallery")=="1"
then
  appendvar("gapps", "Gallery\n");
endif;

if
  prop("rem.prop", "HoloSpiral")=="1"
then
  appendvar("gapps", "HoloSpiral\n");
endif;

if
  prop("rem.prop", "KeyboardStock")=="1"
then
  appendvar("gapps", "KeyboardStock\n");
endif;

if
  prop("rem.prop", "Launcher")=="1"
then
  appendvar("gapps", "Launcher \n");
endif;

if
  prop("rem.prop", "LiveWallpapers")=="1"
then
  appendvar("gapps", "LiveWallpapers\n");
endif;

if
  prop("rem.prop", "LockClock")=="1"
then
  appendvar("gapps", "LockClock\n");
endif;

if
  prop("rem.prop", "MMS")=="1"
then
  appendvar("gapps", "MMS\n");
endif;

if
  prop("rem.prop", "NoiseField")=="1"
then
  appendvar("gapps", "NoiseField\n");
endif;

if
  prop("rem.prop", "Phasebeam")=="1"
then
  appendvar("gapps", "Phasebeam\n");
endif;

if
  prop("rem.prop", "PhotoPhase")=="1"
then
  appendvar("gapps", "PhotoPhase\n");
endif;

if
  prop("rem.prop", "PhotoTable")=="1"
then
  appendvar("gapps", "PhotoTable\n");
endif;

if
  prop("rem.prop", "PicoTTS")=="1"
then
  appendvar("gapps", "PicoTTS\n");
endif;

if
  prop("rem.prop", "SimToolKit")=="1"
then
  appendvar("gapps", "SimToolKit\n");
endif;

if
  prop("rem.prop", "StorageManagerStock")=="1"
then
  appendvar("gapps", "StorageManagerStock\n");
endif;

if
  prop("rem.prop", "Studio")=="1"
then
  appendvar("gapps", "Studio\n");
endif;

if
  prop("rem.prop", "SykoPath")=="1"
then
  appendvar("gapps", "SykoPath\n");
endif;

if
  prop("rem.prop", "Terminal")=="1"
then
  appendvar("gapps", "Terminal\n");
endif;

if
  prop("rem.prop", "Themes")=="1"
then
  appendvar("gapps", "Themes\n");
endif;

if
  prop("rem.prop", "VisualizationWallpapers")=="1"
then
  appendvar("gapps", "VisualizationWallpapers\n");
endif;

if
  prop("rem.prop", "WhisperPush")=="1"
then
  appendvar("gapps", "WhisperPush\n");
endif;



# BYPASS REMOVALS
appendvar("gapps", "\n\n");
if
  prop("bypass.prop", "+Browser")=="1"
then
  appendvar("gapps", "+Browser\n");
endif;
if
  prop("bypass.prop", "+CameraStock")=="1"
then
  appendvar("gapps", "+CameraStock\n");
endif;
if
  prop("bypass.prop", "+Email")=="1"
then
  appendvar("gapps", "+Email\n");
endif;
if
  prop("bypass.prop", "+Gallery")=="1"
then
  appendvar("gapps", "+Gallery\n");
endif;
if
  prop("bypass.prop", "+Launcher")=="1"
then
  appendvar("gapps", "+Launcher\n");
endif;
if
  prop("bypass.prop", "+MMS")=="1"
then
  appendvar("gapps", "+MMS\n");
endif;
if
  prop("bypass.prop", "+PicoTTS")=="1"
then
  appendvar("gapps", "+PicoTTS\n");
endif;

# WRITE CONFIG TO TEMP AND DISPLAY IT
writetmpfile(".gapps-config", getvar("gapps"));

textbox(
    "gapps-config",
    "Your gapps-config file",
    "@update",
    read("tmp/aroma/.gapps-config")
);

##############################################
# Save Choices
##############################################
checkviewbox(
  "Save Choices",
  "<b>Do you want to save your choices?</b>\nThey are stored in /sdcard/Open-GApps\n\n",
  "@welcome",
  "Save Choices", "1", "saveselections"
);
if
    getvar("saveselections")=="1"
  then
    resexec("scripts/tools.sh", "save");
endif;

# -- - SYSTEM APPS - -- #
ini_set("text_next", "<~text_next>");
checkbox(
  "<~apps.tittle>", "<~apps.tittle2>", "@personalize", "apps.prop",

  "System apps", "", 2,
    "<~anthal>", "<~info.anthal>", 0,
    "<~android_pay>", "<~info.android_pay>", 0,
    "<~basic_dream>", "<~info.basic_dream>", 0,
    "<~bt_midi>", "<~info.bt_midi>", 0,
    "<~desk_clock>", "<~info.desk_clock>", 1,
    "<~document>", "<~info.document>", 1,
    "<~download_provider>", "<~info.download_provider>", 1,
    "<~facelock>", "<~info.facelock>", 0,
    "<~galaxy>","<~info.galaxy>", 0,
    "<~holo_spiral>", "<~info.holo_spiral>", 0,
    "<~anim_wallpaper>", "<~info.anim_wallpaper>", 1,
    "<~music>", "<~info.music>", 1,
    "<~noise_feild>", "<~info.noise_feild>", 0,
    "<~oneplus_wallpapers>", "<~info.oneplus_wallpapers>", 1,
    "<~oneplus_camera>", "<~info.oneplus_camera>", 1,
    "<~oneplus_gallery>", "<~info.oneplus_gallery>", 1,
    "<~ota>", "<~info.ota>", 0,
    "<~oneplus_wizard>", "<~info.oneplus_wizard>", 1,
    "<~phase_beam>", "<~info.phase_beam>", 0,
    "<~protips>", "<~info.protips>", 0,
    "<~swiftkey>", "<~info.swiftkey>", 1,
    "<~tags>", "<~info.tags>", 1,
    "<~dive_icon>", "<~info.dive_icon>", 1,
    "<~rifon_icon>", "<~info.rifon_icon>", 1
);

# -- - MOD - -- #
checkbox(
  "<~mod.tittle>", "<~mod.tittle2>", "@personalize", "mod.prop",

  "<~mod.tittle3>", "", 2,
    "<~supersu>", "<~info.supersu>", 1,
    "<~xposed>", "<~info.xposed>", 0,
    "<~adaway>", "<~info.adaway>", 1,
    "<~adb>", "<~info.adb>", 0,
    "<~dns>", "<~info.dns>", 0,
    "<~fos_wallpapers>", "<~info.fos_wallpapers>", 1,
    "<~emoji_one>", "<~info.emoji_one>", 1,
    "<~google_assistant>", "<~info.google_assistant>", 1,
    "<~arise>", "<~info.arise>", 1
);

# -- - THEME - -- #
selectbox(
  "<~theme.tittle>", "<~theme.tittle2>", "@default", "theme.prop",

  "<~theme.tittle3>", "", 2,
    "<~notheme>", "", 1,
    "<~substratum>", "<~info.substratum>", 0,
  "<~splash.tittle>", "", 2,
    "<~fos_splash>", "", 1,
    "<~oos_splash>", "", 0,
    "<~no_splash>", "", 0
);

# -- - ELEMENTALX - -- #
if (file_getprop("/tmp/aroma/kernel.prop", "selected.0") == "2") then

  splash(2000, "elementalx/elementalx");

  agreebox(
     "Terms Of Use",
     "<@center>Please read the ElementalX terms of use</@>",
     "@elementalx",
     "" + readfile_aroma("elementalx/agreement.txt"),
     "I agree with these terms of use",
     "<@center>You must accept the terms</@>"
   );

  selectbox(
    "Maximum CPU Frequency","<@center><b>Select maximum CPU frequency for the little cluster</b></@>","@elementalx","cpu0.prop",

    "1728MHz","(overclocked)",0,
    "1593MHz","(stock)",1,
    "1478MHz","",0,
    "1324MHz","",0,
    "1228MHz","",0
  );

  selectbox(
    "Maximum CPU Frequency","<@center><b>Select maximum CPU frequency for the big cluster</b></@>","@elementalx","cpu2.prop",

    "2265MHz","(overclocked)",0,
    "2150MHz","(stock)",1,
    "1996MHz","",0,
    "1824MHz","",0,
    "1708MHz","",0,
    "1555MHz","",0
  );

  selectbox(
    "Disk Settings","","@elementalx","disk.prop",

    "Select i/o scheduler","",2,
      "CFQ","(stock)",0,
      "deadline","",0,
      "FIOPS","(default)",1,
      "SIO","",0,
      "BFQ","",0,
      "noop","",0,
      "zen","",0
  );

  checkbox(
    "Wake Gestures","<@center><b>Select the screen gestures you would like to use</b></@>","@elementalx","gest.prop",

    "Wake Gestures","<b>Sweep or double tap to wake up phone</b>",2,
    "Sweep right","",0,
    "Sweep left","",0,
    "Sweep up","",0,
    "Sweep down","",0,
    "Double tap","",0
  );

  selectbox(
    "Sweep2Sleep","<@center><b>Sweep across navbar area to put phone to sleep</b></@>","@elementalx","s2s.prop",

    "Disable Sweep2Sleep","",0,
    "Sweep right","",0,
    "Sweep left","(default)",1,
    "Sweep left or right","",0
  );

  checkbox(
    "Other settings","<@center><b>Select the mods you want to install</b></@>","@elementalx","mods.prop",

    "Disable fsync","Faster fileystem performance, with risk of data loss",0,
    "Backlight dimmer","Lower screen brightness",0
  );
endif;

# -- - Pre-Install - -- -#
ini_set("text_next", "<~install.now>");
viewbox( "<~pre.install.title>", "<~pre.install>\n\n" + "<~pre.install2>\n\n" + "<~pre.install3>\n\n\n\n", "@install");

# -- - Install - -- #
ini_set("text_next", "<~text_next>");
install( "<~install>", "<b>" + ini_get("rom_name") + "</b> is being installed.\n\n" + "<~install.finish>", "@install");

# -- - Post-Install - -- #
ini_set("text_next", "Finish");
checkviewbox(
  "<~install.finish.title>", "<#selectbg_g><b><~finish.title></b></#>\n\n" + "<b><~finish.msg></b>\n\n" + "", "@finish",

  "<~finish.reboot>", "0", "reboot_it");

# -- - REBOOT - -- #
if
  getvar("reboot_it") == "1" then reboot("onfinish");
endif;

# Copyright 2016 Antoine GRAVELOT
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#  Author : Nevax
#

#ui_print("    ______                   __              ");
#ui_print("   / ____/_______  ___  ____/ /___  ____ ___ ");
#ui_print("  / /_  / ___/ _ \/ _ \/ __  / __ \/ __ `__ \");
#ui_print(" / __/ / /  /  __/  __/ /_/ / /_/ / / / / / /");
#ui_print("/_/___/_/___//__/\___/\____/\____/_/ /_/ /_/ ");
#ui_print("  / __ \/ ___/                               ");
#ui_print(" / / / /\__ \    facebook.com/nevaxtuto      ");
#ui_print("/ /_/ /___/ /   youtube.com/nevaxtuto        ");
#ui_print("\____//____/   twitter.com/nevax07           ");

set_progress(0.000000);
# -- - ASSERT - -- #
if (file_getprop("/tmp/aroma/install_mod.prop", "selected.1") == "1")
  then getprop("ro.build.product") == "!assert!" ||
      abort("This package is for \"!assert!\" devices; this is a \"" +
            getprop("ro.build.product") + "\".");
endif;

set_progress(0.01);
ui_print(" ");
ui_print("@Pre-installing Process");
ui_print(" ");

ui_print("   Extracting Temporary Files");
show_progress(0.03, 1600);
delete_recursive("/tmp/tools");
package_extract_dir("tools", "/tmp/tools");
set_metadata_recursive("/tmp/tools", "uid", 0, "gid", 0, "dmode", 0777, "fmode", 0777);

ifelse(is_mounted("/system"), run_program("/tmp/tools/busybox", "umount", "/system"));
ifelse(is_mounted("/data"), run_program("/tmp/tools/busybox", "umount", "/data"));

# -- - Backup addond - -- #
if (file_getprop("/tmp/aroma/install_mod.prop", "selected.2") == "1")
  then
  set_progress(0.032);
  ui_print("   Mounting System & Data");
  run_program("/tmp/tools/busybox", "mount", "/system");
  #mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/system", "/system");
  ui_print("   Mounting Data");
  run_program("/tmp/tools/busybox", "mount", "/data");
  #mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/userdata", "/data");

  set_progress(0.035);
  ui_print("   Backup up your addon.d ");
  set_metadata_recursive("/tmp/tools/addon", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0755);
  run_program("/tmp/tools/addon/backuptool.sh", "backup");

  ui_print("   Unmounting System");
  ifelse(is_mounted("/system"), run_program("/tmp/tools/busybox", "umount", "/system"));
endif;

# -- - CLEAN SYSTEM - -- #
set_progress(0.04);
ui_print("   Formating System");
run_program("/tmp/tools/busybox", "mount", "/system");
delete_recursive("/system");

set_progress(0.08);
ui_print("   Cleaning junk files");
delete_recursive("/sdcard/.android_secure");
delete_recursive("/sdcard/.bookmark_thumb1");
delete_recursive("/sdcard/.data");
delete_recursive("/sdcard/.tmp");
#delete_recursive("/sdcard/Android");
delete_recursive("/sdcard/bugreports");
delete_recursive("/sdcard/DCIM/.thumbnails");
delete_recursive("/sdcard/LazyList");
delete_recursive("/sdcard/LOST.DIR");
delete_recursive("/sdcard/tmp");
run_program("/tmp/tools/clean.sh");

ui_print("   Wiping Cache / Dalvik");
delete_recursive("/cache");
delete_recursive("/data/dalvik-cache/*");
wipe_cache();

ui_print(" ");
ui_print("@Installing FreedomOS");
ui_print(" ");

set_progress(0.10);
show_progress(0.57, 130000);
ui_print("   Extracting System");
ifelse(is_mounted("/system"), run_program("/tmp/tools/busybox", "umount", "/system"));
package_extract_file("system.img", "/dev/block/bootdevice/by-name/system");
run_program("/tmp/tools/busybox", "mount", "/system");

ui_print("   Extracting Data");
package_extract_dir("data", "/data/");

# -- - radio update tasks - -- #


if (file_getprop("/tmp/aroma/install_mod.prop", "selected.3") == "1")
  then
  set_progress(0.580000);
  ui_print("   Extracting Radio");
  package_extract_file("RADIO/static_nvbk.bin", "/dev/block/bootdevice/by-name/oem_stanvbk");
  ui_print("   Extracting Firmware");
  package_extract_file("firmware-update/3.2.8/firmware-update/cmnlib64.mbn", "/dev/block/bootdevice/by-name/cmnlib64");
  package_extract_file("firmware-update/3.2.8/firmware-update/cmnlib.mbn", "/dev/block/bootdevice/by-name/cmnlib");
  package_extract_file("firmware-update/3.2.8/firmware-update/hyp.mbn", "/dev/block/bootdevice/by-name/hyp");
  package_extract_file("firmware-update/3.2.8/firmware-update/pmic.elf", "/dev/block/bootdevice/by-name/pmic");
  package_extract_file("firmware-update/3.2.8/firmware-update/tz.mbn", "/dev/block/bootdevice/by-name/tz");
  package_extract_file("firmware-update/3.2.8/firmware-update/emmc_appsboot.mbn", "/dev/block/bootdevice/by-name/aboot");
  package_extract_file("firmware-update/3.2.8/firmware-update/devcfg.mbn", "/dev/block/bootdevice/by-name/devcfg");
  package_extract_file("firmware-update/3.2.8/firmware-update/keymaster.mbn", "/dev/block/bootdevice/by-name/keymaster");
  package_extract_file("firmware-update/3.2.8/firmware-update/xbl.elf", "/dev/block/bootdevice/by-name/xbl");
  package_extract_file("firmware-update/3.2.8/firmware-update/rpm.mbn", "/dev/block/bootdevice/by-name/rpm");
  package_extract_file("firmware-update/3.2.8/firmware-update/NON-HLOS.bin", "/dev/block/bootdevice/by-name/modem");
  package_extract_file("firmware-update/3.2.8/firmware-update/adspso.bin", "/dev/block/bootdevice/by-name/dsp");
  package_extract_file("firmware-update/3.2.8/firmware-update/firmware-update/BTFM.bin", "/dev/block/bootdevice/by-name/bluetooth");
endif;

if (file_getprop("/tmp/aroma/install_mod.prop", "selected.3") == "2")
  then
  set_progress(0.580000);
  ui_print("   Extracting Radio");
  package_extract_file("RADIO/static_nvbk.bin", "/dev/block/bootdevice/by-name/oem_stanvbk");
  ui_print("   Extracting Firmware");
  package_extract_file("firmware-update/cmnlib64.mbn", "/dev/block/bootdevice/by-name/cmnlib64");
  package_extract_file("firmware-update/cmnlib.mbn", "/dev/block/bootdevice/by-name/cmnlib");
  package_extract_file("firmware-update/hyp.mbn", "/dev/block/bootdevice/by-name/hyp");
  package_extract_file("firmware-update/pmic.elf", "/dev/block/bootdevice/by-name/pmic");
  package_extract_file("firmware-update/tz.mbn", "/dev/block/bootdevice/by-name/tz");
  package_extract_file("firmware-update/emmc_appsboot.mbn", "/dev/block/bootdevice/by-name/aboot");
  package_extract_file("firmware-update/devcfg.mbn", "/dev/block/bootdevice/by-name/devcfg");
  package_extract_file("firmware-update/keymaster.mbn", "/dev/block/bootdevice/by-name/keymaster");
  package_extract_file("firmware-update/xbl.elf", "/dev/block/bootdevice/by-name/xbl");
  package_extract_file("firmware-update/rpm.mbn", "/dev/block/bootdevice/by-name/rpm");
  package_extract_file("firmware-update/NON-HLOS.bin", "/dev/block/bootdevice/by-name/modem");
  package_extract_file("firmware-update/adspso.bin", "/dev/block/bootdevice/by-name/dsp");
  package_extract_file("firmware-update/BTFM.bin", "/dev/block/bootdevice/by-name/bluetooth");
endif;

# -- - Restoring Addon.d - -- #
if (file_getprop("/tmp/aroma/install_mod.prop", "selected.2") == "1")
  then
  ui_print("   Restoring your addon.d");
  run_program("/tmp/tools/addon/backuptool.sh", "restore");
endif;

# -- - pin/patern fix - -- #
if (file_getprop("/tmp/aroma/install_mod.prop", "selected.1") == "1")
    set_metadata("/tmp/clean.sh", "uid", 0, "gid", 0, "mode", 0777);
    run_program("/tmp/clean.sh");
    ui_print("   Fixing rom pin/pattern");
 endif;

# -- - STOCK KERNEL - -- #

ui_print("   Installing Stock Kernel");
package_extract_file("boot.img", "/dev/block/bootdevice/by-name/boot");

# -- - ROOT - -- #

if (file_getprop("/tmp/aroma/mod.prop", "item.1.1") == "1")
  then
  ui_print(" ");
  ui_print("@Installing SuperSU");
  run_program("/tmp/tools/busybox", "echo", "DEBUG: Move supersu to /tmp/tools/supersu ->  /tmp/supersu ");
  run_program("/tmp/tools/busybox", "mv", "/tmp/tools/supersu", "/tmp/supersu");
  run_program("/tmp/tools/busybox", "echo", "DEBUG: Start SU install script");
  run_program("/tmp/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/supersu/supersu.zip");
  run_program("/tmp/tools/busybox", "mount", "/system");
endif;

# -- - ARISE - -- #

ui_print(" ");
ui_print("@Installing A.R.I.S.E");
run_program("/tmp/tools/busybox", "echo", "DEBUG: Move arise to /tmp/tools/arise ->  /tmp/zip ");
run_program("/tmp/tools/busybox", "mv", "/tmp/tools/arise", "/tmp/zip");
run_program("/tmp/tools/busybox", "sh", "/tmp/zip/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/arise/dummy.zip");

# -- - MOD - -- #
set_progress(0.720000);
ui_print(" ");
ui_print("@Applying Your Settings");
ui_print(" ");

# -- - KERNEL PATCH - -- #
ui_print("   Installing FreedomOS Patched Kernel");
run_program("/tmp/tools/busybox", "echo", "DEBUG: Extracting patch");
package_extract_dir("tools/kernel/config", "/tmp");
set_metadata("/tmp/busybox", "uid", 0, "gid", 0, "mode", 0777);

run_program("/tmp/busybox", "fstrim", "/cache");
run_program("/tmp/busybox", "fstrim", "/data");

package_extract_dir("tools/kernel/boot", "/tmp");

run_program("/tmp/tools/busybox", "echo", "DEBUG: Set permissions");
set_metadata("/tmp/cmdline.sh", "uid", 0, "gid", 0, "mode", 0777);
set_metadata("/tmp/editramdisk.sh", "uid", 0, "gid", 0, "mode", 0777);
set_metadata("/tmp/makebootimg.sh", "uid", 0, "gid", 0, "mode", 0777);
set_metadata("/tmp/mkbootimg", "uid", 0, "gid", 0, "mode", 0777);
set_metadata("/tmp/unpackbootimg", "uid", 0, "gid", 0, "mode", 0777);


ui_print("   Customizing ramdisk");
run_program("/tmp/busybox", "dd", "if=/dev/block/bootdevice/by-name/boot", "of=/tmp/boot.img");
run_program("/tmp/unpackbootimg", "-i", "/tmp/boot.img", "-o", "/tmp/");
run_program("/tmp/cmdline.sh");
run_program("/tmp/editramdisk.sh");
run_program("/tmp/makebootimg.sh");

ui_print("   Installing kernel");
run_program("/tmp/busybox", "dd", "if=/tmp/newboot.img", "of=/dev/block/bootdevice/by-name/boot");



# -- - XPOSED - -- #
if (file_getprop("/tmp/aroma/mod.prop", "item.1.2") == "1")
  then
    set_progress(0.880000);
    ui_print("   Installing Xposed Installer");
endif;

if (file_getprop("/tmp/aroma/mod.prop", "item.1.2") == "0")
  then
    set_progress(0.880000);
    run_program("/tmp/tools/busybox", "echo", "DEBUG: Uninstall Xposed");
    delete_recursive("/system/app/XposedInstaller");
    delete_recursive("/data/app/XposedInstaller");
endif;

# -- - ADAWAY - -- #
if (file_getprop("/tmp/aroma/mod.prop", "item.1.3") == "1")
  then
    set_progress(0.900000);
  	ui_print("   Installing Adaway");
  	ui_print("   Installing host file");
  	set_metadata("/system/etc/hosts", "uid", 0, "gid", 0, "mode", 0777);
  	delete("/system/etc/hosts");
  	package_extract_file("tools/hosts", "/system/etc/hosts");
  	set_metadata("/system/etc/hosts", "uid", 0, "gid", 0, "mode", 0644);
endif;

if (file_getprop("/tmp/aroma/mod.prop", "item.1.3") == "0")
  then
    set_progress(0.900000);
    run_program("/tmp/tools/busybox", "echo", "DEBUG: Uninstall Adaway");
    delete_recursive("/system/app/Adaway");
    delete_recursive("/data/app/Adaway");
endif;

# -- - ADB - -- #
if (file_getprop("/tmp/aroma/mod.prop", "item.1.4") == "1")
  then
    set_progress(0.920000);
    ui_print("   Enabling ADB");
    run_program("/tmp/tools/adb.sh");
endif;

  # -- - GOOGLE DNS - -- #
if (file_getprop("/tmp/aroma/mod.prop", "item.1.5") == "1")
  then
    set_progress(0.925000);
    ui_print("   Setting Google DNS");
    run_program("/tmp/tools/google_dns.sh");
endif;

# -- - WALLPAPER - -- #
if (file_getprop("/tmp/aroma/mod.prop", "item.1.6") == "1")
  then
    set_progress(0.930000);
    ui_print("   Extracting FreedomOS Wallpapers");
    package_extract_dir("media/wallpaper", "/sdcard/FreedomOS_wallpaper");
endif;

if (file_getprop("/tmp/aroma/mod.prop", "item.1.6") == "0")
  then
    set_progress(0.930000);
    delete_recursive("/sdcard/FreedomOS_wallpaper");
endif;

# -- - EMOJI ONE - -- #
if (file_getprop("/tmp/aroma/mod.prop", "item.1.7") == "1")
  then
    set_progress(0.935000);
    ui_print("   Installing EmojiOne");
    package_extract_file("tools/fonts/emojione-android.ttf", "/system/fonts/NotoColorEmoji.ttf");
    set_metadata("/system/fonts/NotoColorEmoji.ttf", "uid", 0, "gid", 0,  "mode", 0644);
endif;

# -- - Google Assistant - -- #
if (file_getprop("/tmp/aroma/mod.prop", "item.1.8") == "1")
  then
  set_progress(0.94000);
   ui_print("   Setting up Google Assistant");
   run_program("/tmp/tools/google_assistant.sh");
endif;

# -- - NO THEME - -- #
if (file_getprop("/tmp/aroma/theme.prop", "selected.1")=="1")
  then
    run_program("/system/bin/echo", "DEBUG: No theme selected");
    delete_recursive("/system/app/Substratum");
    delete_recursive("/data/app/Substratum");
endif;

# -- - SUBSTRATUM - -- #
if (file_getprop("/tmp/aroma/theme.prop", "selected.1")=="2")
  then
    set_progress(0.950000);
    ui_print("   Installing Substratum");
    run_program("/system/bin/echo", "DEBUG: Uninstall Layers");
endif;

# -- - FOS SPLASH - -- #
if (file_getprop("/tmp/aroma/theme.prop", "selected.2")=="1")
  then
    set_progress(0.955000);
    ui_print("   Installing FreedomOS Bootscreen");
    package_extract_file("tools/splash-fos.bin", "/dev/block/sde17");
endif;

# -- - OOS SPLASH - -- #
if (file_getprop("/tmp/aroma/theme.prop", "selected.2")=="2")
  then
    set_progress(0.955000);
    ui_print("   Installing OxygenOS Bootscreen");
    package_extract_file("tools/splash-stock.bin", "/dev/block/sde17");
endif;


# -- - Google apps - -- #
set_progress(0.940000);
ui_print(" ");
ui_print("@Customize Google Applications");
ui_print(" ");

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.1") == "0")
  then
    ui_print("   Removing Google Calculator");
  	delete_recursive("/system/app/Calculator");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.google.android.calculator-*");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.2") == "0")
  then
    ui_print("   Removing Google Calendar ");
    delete_recursive("/system/app/CalendarGoogle");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.google.android.calendar-*");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.3") == "0")
  then
  ui_print("   Removing Google Call Log Backup");
  delete_recursive("/system/priv-app/CallLogBackup");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.4") == "0")
  then
    ui_print("   Removing Google Chrome ");
    delete_recursive("/system/app/Chrome");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.android.chrome-*");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.5") == "0")
  then
    ui_print("   Removing Google Drive ");
    delete_recursive("/system/app/Drive");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.google.android.apps.docs-*");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.6") == "0")
  then
    ui_print("   Removing Gmail ");
    delete_recursive("/system/app/Duo");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.7") == "0")
  then
    ui_print("   Removing Gmail ");
    delete_recursive("/system/app/Gmail2");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.google.android.gm-*");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.8") == "0")
  then
    ui_print("   Removing Gmail Exchange ");
  	delete_recursive("/system/app/GmailExchange");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.9") == "0")
  then
    ui_print("   Removing Google ");
		delete_recursive("/system/priv-app/Velvet");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.google.android.googlequicksearchbox-*");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.10") == "0")
  then
    ui_print("   Removing Messenger ");
    delete_recursive("/system/app/Messenger");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.google.android.apps.messaging-*");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.11") == "0")
  then
    ui_print("   Removing Google Photos ");
    delete_recursive("/system/app/Photos");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.google.android.apps.photos-*");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.12") == "0")
  then
    ui_print("   Removing Google Play Music ");
    delete_recursive("/system/app/Music2");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.google.android.music-*");
endif;

if (file_getprop("/tmp/aroma/gapps.prop", "item.1.13") == "0")
  then
    ui_print("   Removing YouTube");
    delete_recursive("/system/app/YouTube");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.google.android.youtube-*");
endif;

# -- - System Apps - -- #
set_progress(0.960000);
ui_print(" ");
ui_print("@Customize System Applications");
ui_print(" ");

if (file_getprop("/tmp/aroma/apps.prop", "item.1.1") == "0")
  then
  ui_print("   Removing AntHal Service");
  delete_recursive("/system/app/AntHalService");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.2") == "0")
  then
    ui_print("   Removing Android Pay");
		delete_recursive("/system/app/AndroidPay");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.3") == "0")
  then
    ui_print("   Removing Basic Dreams");
  	delete_recursive("/system/app/BasicDreams");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.4") == "0")
  then
    ui_print("   Removing Bluetooth Midi Service");
    delete_recursive("/system/app/BluetoothMidiService");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.5") == "0")
  then
    ui_print("   Removing Desk Clock");
    delete_recursive("/system/app/DeskClock");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.6") == "0")
  then
  ui_print("   Removing Documents");
  delete_recursive("/system/app/DocumentsUI");
  delete_recursive("/system/app/OPFilemanager");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.7") == "0")
  then
  ui_print("   Removing Download Provider");
  delete_recursive("/system/app/DownloadProviderUi");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.8") == "0")
  then
    ui_print("   Removing FaceLock");
		delete_recursive("/system/app/FaceLock");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.9") == "0")
  then
    ui_print("   Removing Galaxy4");
  	delete_recursive("/system/app/Galaxy4");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.10") == "0")
  then
    ui_print("   Removing Holo Spiral");
  	delete_recursive("/system/app/HoloSpiralWallpaper");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.11") == "0")
  then
    ui_print("   Removing Live wallpapers");
  	delete_recursive("/system/app/LiveWallpapers");
    ui_print("   Removing Live wallpapers Picker");
    delete_recursive("/system/app/LiveWallpapersPicker");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.12") == "0")
  then
    ui_print("   Removing OnePlus Music");
    delete_recursive("/system/reserve/OPMusic");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.13") == "0")
  then
    ui_print("   Removing Noise Feild");
  	delete_recursive("/system/app/NoiseField");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.14") == "0")
  then
    ui_print("   Removing OnePlus Wallpapers");
    delete_recursive("/system/app/OnePlusWallpapers")
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.15") == "0")
  then
  ui_print("   Removing OnePlus Camera");
  delete_recursive("/system/priv-app/OnePlusCamera");
  delete_recursive("/system/priv-app/OnePlusCameraService");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.16") == "0")
  then
  ui_print("   Removing OnePlus Gallery");
  delete_recursive("/system/priv-app/OnePlusGallery");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.17") == "0")
  then
  ui_print("   Removing OnePlus OTA");
  delete_recursive("/system/app/OPBackup");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.18") == "0")
  then
  ui_print("   Removing OnePlus Wizard");
  delete_recursive("/system/priv-app/OnePlusWizard");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.19") == "0")
  then
    ui_print("   Removing PhaseBeam");
		delete_recursive("/system/app/PhaseBeam");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.20") == "0")
  then
    ui_print("   Removing Protips");
	  delete_recursive("/system/app/Protips");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.21") == "0")
  then
    ui_print("   Removing Swiftkey");
    delete_recursive("/system/app/SwiftKey");
    delete_recursive("/system/app/SwiftKeyFactorySettings");
    delete_recursive("/system/com.touchtype");
    run_program("/tmp/tools/busybox", "rm", "-R", "/data/app/com.touchtype.swiftkey-*");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.22") == "0")
  then
    ui_print("   Removing Tags");
		delete_recursive("/system/priv-app/Tag");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.23") == "0")
  then
   ui_print("   Removing DivesIconPack");
   delete_recursive("/system/app/DivesIconPack");
endif;

if (file_getprop("/tmp/aroma/apps.prop", "item.1.24") == "0")
  then
   ui_print("   Removing RifonIconPack");
   delete_recursive("/system/app/RifonIconPack");
endif;

set_progress(0.990000);
ui_print(" ");
ui_print(" ");
set_progress(1.00000);
ui_print("@Finished");
ui_print(" ");
